generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  image     String?
  role      Role      @default(USER)
  accounts  Account[]
  pesanan   Pesanan[] // Relasi ke pesanan
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Pesanan {
  id             Int      @id @default(autoincrement())
  userId         Int // Foreign key untuk User
  user           User     @relation(fields: [userId], references: [id]) // Relasi ke User
  nama           String
  namaAplikasi   String
  keperluan      String
  teknologi      String[]
  fitur          String[]
  deadline       DateTime
  akunTiktok     String
  status         Status   @default(PENDING)
  buktiDP        String?
  buktiPelunasan String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Portofolio {
  id        Int      @id @default(autoincrement())
  nama      String
  deskripsi String
  techStack String[]
  link      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

enum Status {
  PENDING
  PROSES
  SELESAI
  DITOLAK
}
